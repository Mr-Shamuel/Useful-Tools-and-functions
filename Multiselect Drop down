import React, { useEffect } from "react";
import {
  Button,
  Card,
  Col,
  Form,
  OverlayTrigger,
  Row,
  Tooltip,
} from "react-bootstrap";
import { t } from "i18next";
import { useState } from "react";

import Swal from "sweetalert2";
import Select from "react-select";
import { toast } from "react-toastify";
import { useForm } from "react-hook-form";
import { useTranslation } from "react-i18next";
import { useDispatch, useSelector } from "react-redux";
import FiscalYearAssignModal from "./FiscalYearAssignModal";
import axiosInstance from "../../../../Services/Interceptor";
import { CommonTable } from "../../../../Common/CommonTable/CommonTable";
import Tokenvalidation from "../../../../Authentication/Tokenvalidation";
import CommonLoading from "../../../../Common/CommonFunctions/CommonLoading";
import { getFiscalYearData } from "../../../../Redux/Actions/Apamanagement/FiscalYear/FiscalYearAction";

const FiscalYearAssign = () => {
  const {
    watch,
    reset,
    control,
    setValue,
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const { hierarchy } = useSelector((state) => state?.hierarchy);
  const dispatch = useDispatch();
  const { t, i18n } = useTranslation();
  const [tabledata, setTabledata] = useState([]);
  const [office, setHigherOffice] = useState([]);
  const [btnState, setBtnState] = useState("add");
  const [multiArray, setMultiArray] = useState([]);
  const [filterData, setFilterData] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [updateFiscalYearData, setUpdateFiscalYearData] = useState({});

  const [selectAll, setSelectAll] = useState(false);

  useEffect(() => {
    dispatch(getFiscalYearData(1));
  }, [dispatch]);

  const options = office?.map((item, index) => ({
    value: item?.id,
    label: item?.nameBn,
  }));

  const handleSelectAll = () => {
    setSelectAll(!selectAll);
    const values = selectAll ? [] : options.map((option) => option.value);
    setValue("orgId", values);
    setMultiArray(values);
  };

  const handleChange = (selectedOptions) => {
    const values = selectedOptions
      ? selectedOptions.map((option) => option.value)
      : [];
    setValue("orgId", values);
    setMultiArray(values);
  };

  const COLUMNS = [
    {
      Header: `${t("CommonBtn.si_no")}`,
      accessor: "Sl_No",
      className: "text-center ",
    },
    {
      Header: `${t("FiscalYearAssign.hierarchyNameBn")}`,
      accessor: "hierarchyNameBn",
      className: "text-center ",
    },

    {
      Header: `${t("FiscalYearAssign.orgNameBn")}`,
      accessor: "orgNameBn",
      className: "text-center ",
    },
    {
      Header: `${t("FiscalYearAssign.apaFyBn")}`,
      accessor: "apaFyBn",
      className: "text-center ",
    },

    {
      Header: `${t("FiscalYearAssign.achievementFyBn")}`,
      accessor: "achievementFyBn",
      className: "text-center ",
    },

    {
      Header: `${t("CommonBtn.action")}`,
      accessor: "Action",
      className: "text-center ",
    },
  ];

  const handleOpenModal = () => {
    setUpdateFiscalYearData({});
    reset(updateFiscalYearData);
    setShowModal(true);
    setBtnState("add");
    Tokenvalidation();
  };

  const handleDelete = (item) => {
    Tokenvalidation();
    let restItem = filterData?.filter(
      (mulItem) => mulItem?.orgId !== item?.orgId
    );

    Swal.fire({
      title: "আপনি কি নিশ্চিত ?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "হ্যাঁ",
      cancelButtonText: "না",
    }).then((result) => {
      if (result.isConfirmed) {
        axiosInstance
          .delete(`apa-config/api/v1/fiscal-years/${item?.orgId}`)
          .then((res) => {
            setFilterData(restItem); //seting the filter data
            toast.error("সফলভাবে মুছে ফেলা হয়েছে", {
              position: toast.POSITION.TOP_RIGHT,
              hideProgressBar: false,
              autoClose: 500,
              theme: "colored",
            });
          })
          .catch((err) => {
            toast.error(err.response.data.message, {
              position: toast.POSITION.TOP_RIGHT,
              hideProgressBar: false,
              autoClose: 700,
              theme: "colored",
            });
          });
      }
    });
  };

  const handleHierarchyChange = (id) => {
    getOrganiztionsData(id);
    setSelectAll(false);
    setMultiArray([]);
    setTabledata([]);
  };

  const getOrganiztionsData = (id) => {
    axiosInstance
      .get(`/core-module/api/v1/organizations/hierarchy/${id}`)
      .then((res) => {
        setHigherOffice(res?.data?.data);
      })
      .catch((err) => {
        console.log(err, "err");
      });
  };

  const handleFilter = () => {
    const data = {
      orgId: multiArray,
    };
    setIsLoading(true);
    axiosInstance
      .post("/apa-config/api/v1/fiscal-years/filter", data)
      .then((res) => {
        setFilterData(res?.data?.data);

        if (res?.data?.data?.length === 0) {
          setIsLoading(false);
          setTabledata([]);
          toast.warning("অনুসন্ধাঙ্কিত কোন তথ্য পাওয়া যায়নি", {
            position: toast.POSITION.TOP_RIGHT,
            hideProgressBar: false,
            autoClose: 2000,
            theme: "colored",
          });
        } else {
          setIsLoading(false);
          const alldata = res?.data?.data?.map((item, index) => ({
            Sl_No: item?.id,
            hierarchyNameBn: item?.hierarchyNameBn,
            orgNameBn: item?.orgNameBn,
            apaFyBn: item?.apaFyBn,
            achievementFyBn: item?.achievementFyBn,

            Status: (
              <span
                className={
                  item?.status === "Active"
                    ? "  text-success   fw-bold  "
                    : "  text-danger  fw-bold  "
                }
              >
                {item?.status === "Active" ? "সক্রিয়" : "নিষ্ক্রিয়"}
              </span>
            ),

            Action: (
              <span className="">
                <OverlayTrigger
                  placement="top"
                  overlay={<Tooltip>{t("CommonBtn.delete")}</Tooltip>}
                >
                  <button
                    onClick={() => handleDelete(item)}
                    to="#"
                    className="btn btn-danger btn-sm rounded-11"
                  >
                    <i>
                      <svg
                        className="table-delete"
                        xmlns="http://www.w3.org/2000/svg"
                        height="20"
                        viewBox="0 0 24 24"
                        width="16"
                      >
                        <path d="M0 0h24v24H0V0z" fill="none" />
                        <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z" />
                      </svg>
                    </i>
                  </button>
                </OverlayTrigger>
              </span>
            ),
          }));

          setTabledata(alldata);
        }
      })

      .catch((err) => {
        console.log(err.response.data.message, "err");
      });
  };

  return (
    <div className="main-container container">
      <Card.Header>
        <div className="d-flex justify-content-between">
          <h4 className="card-title ">{t("FinancialYear.assign")} </h4>
          <div>
            <Button onClick={handleOpenModal}>
              {t("CommonBtn.add")} <i className="fa fa-plus"></i>{" "}
            </Button>
          </div>
        </div>

        <Row>
          <Col md={4}>
            <Form.Label className="form-label mg-b-10 text-dark">
              {t("OfficeModal.Organogram")}
              <span className="text-danger">*</span>
            </Form.Label>

            <Form.Select
              style={{ height: "38px" }}
              {...register("hierarchyId", {
                required: true,
              })}
              onChange={(event) => handleHierarchyChange(event.target.value)}
            >
              <option value="" disabled selected>
                {t("HierarchyModal.layer-placeholder")}
              </option>
              {hierarchy?.content?.map((item, index) => (
                <option key={index} value={item?.id}>
                  {item?.nameBn}{" "}
                </option>
              ))}
            </Form.Select>

            {errors?.hierarchyId?.type === "required" && (
              <span className="text-danger" style={{ fontSize: "16px" }}>
                {i18n.language === "en" ? " Required" : "এই তথ্যটি আবশ্যক"}
              </span>
            )}
          </Col>

          <Col md={6}>
            <Form.Label className="form-label mg-b-10 text-dark">
              {t("APASubmissionReport.OrganizationName")}{" "}
              <span className="text-danger">*</span>
            </Form.Label>

            <Select
              isMulti
              {...register("orgId", { required: true })}
              placeholder={t("CommonBtn.placeholder")}
              noOptionsMessage={() =>
                i18n.language === "en"
                  ? "No Option found..."
                  : "পাওয়া যায়নি..."
              }
              onChange={handleChange}
              options={options}
              value={options.filter((option) =>
                watch("orgId")?.includes(option.value)
              )}
            />

            <div>
              <input
                type="checkbox"
                checked={selectAll}
                onChange={handleSelectAll}
              />
              <label className="pt-1">Select All</label>
            </div>
          </Col>

          <Col md={2} className="d-flex align-items-center">
            <Button
              className="btn btn-light-green w-100 mt-2"
              type="submit"
              onClick={handleFilter}
              disabled={multiArray?.length === 0}
              style={{ height: "38px" }}
            >
              {t("CommonBtn.filter")}
            </Button>
          </Col>
        </Row>
      </Card.Header>

      <Row>
        <Col lg={12}>
          <Card className="custom-card mt-4">
            <Card.Body>
              <div className="table-responsive fileexport pos-relative ">
                {isLoading ? (
                  <CommonLoading />
                ) : (
                  <>
                    {tabledata?.length > 0 ? (
                      <CommonTable
                        DATATABLE={tabledata}
                        COLUMNS={COLUMNS}
                        filter={true}
                        sortBy={true}
                        pagination={true}
                      />
                    ) : (
                      <div className="main-container filter container mb-4 py-4">
                        <ul style={{ color: "#3C21F7" }}>
                          <li className="text-size-26 py-2">
                            ডাটা দেখার জন্য অনুগ্রহপুর্বক ফিল্টার ব্যবহার করুন।
                          </li>
                        </ul>
                      </div>
                    )}
                  </>
                )}
              </div>
            </Card.Body>
          </Card>
        </Col>
      </Row>

      {
        <FiscalYearAssignModal
          reset={reset}
          watch={watch}
          errors={errors}
          control={control}
          setValue={setValue}
          register={register}
          btnState={btnState}
          showModal={showModal}
          setBtnState={setBtnState}
          handleSubmit={handleSubmit}
          setShowModal={setShowModal}
          updateFiscalYearData={updateFiscalYearData}
          setUpdateFiscalYearData={setUpdateFiscalYearData}
        />
      }
    </div>
  );
};

export default FiscalYearAssign;
